/api/v1/permissions:
  get:
    tags:
      - Permissions
    security:
      - bearerAuth: []
    description: get All Permissions.
    parameters:
      - in: query
        name: module
        schema:
          type: string
          enum: [users, drivers, cars, ride, agent]

    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
  post:
    tags:
      - Permissions
    security:
      - bearerAuth: []
    description: add Permission.
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Permission"
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/permissions/{id}:
  put:
    tags:
      - Permissions
    security:
      - bearerAuth: []
    description: Update Permission.
    parameters:
      - in: path
        name: id
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/U-Permission"
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
  delete:
    tags:
      - Permissions
    security:
      - bearerAuth: []
    description: delete Permission.
    parameters:
      - in: path
        name: id
        schema:
          type: string
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/permissions/assign:
  get:
    tags:
      - Permissions
    security:
      - bearerAuth: []
    description: All assign Permissions to role.
    parameters:
      - in: path
        name: roleId
        schema:
          type: string
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/permissions/assign/{roleId}:
  post:
    tags:
      - Permissions
    security:
      - bearerAuth: []
    description: add Permission.
    parameters:
      - in: path
        name: roleId
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              rolePermissions:
                type: array
                items:
                  $ref: "#/components/schemas/Assign_Permission"
            required:
              - rolePermissions

    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
  put:
    tags:
      - Permissions
    security:
      - bearerAuth: []
    description: update Permission.
    parameters:
      - in: path
        name: roleId
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              rolePermissions:
                type: array
                items:
                  $ref: "#/components/schemas/Assign_Permission"
            required:
              - rolePermissions

    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/assign/special-permissions:
  get:
    tags:
      - Permissions
    security:
      - bearerAuth: []
    description: get All Special Permissions.

    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/assign/special-permissions/{userId}:
  post:
    tags:
      - Permissions
    security:
      - bearerAuth: []
    description: add or update Special Permission.
    parameters:
      - in: path
        name: userId
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              rolePermissions:
                type: array
                items:
                  $ref: "#/components/schemas/Assign_Permission"
            required:
              - rolePermissions

    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/roles:
  get:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: get All roles.
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
  post:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: add role.
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Basic_Model"
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/roles/{id}:
  put:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: Update Role.
    parameters:
      - in: path
        name: id
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Basic_Model"
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
  delete:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: delete Role.
    parameters:
      - in: path
        name: id
        schema:
          type: string
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/assign/roles:
  get:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: get assign Role.
    parameters:
      - in: query
        name: role
        schema:
          type: string
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
  post:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: assign Role.
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Assign_Role"
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
  put:
    tags:
      - Roles
    security:
      - bearerAuth: []
    description: update assign Role.
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/U-Assign_Role"
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
