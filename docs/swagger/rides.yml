/api/v1/rides:
  get:
    tags:
      - Rides
    security:
      - bearerAuth: []
    description: Admin gest all rides.
    parameters:
      - in: query
        name: page
        schema:
          type: number
          default: 1
      - in: query
        name: limit
        schema:
          type: number
          default: 100
      - in: query
        name: startDate
        schema:
          type: string
      - in: query
        name: endDate
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
            [
              Demande,
              Valider,
              Rejeter,
              En attente,
              Chauffeur au lieu de depart,
              En cours,
              Arriver,
              Términer,
            ]
      - in: query
        name: through
        schema:
          type: string
          enum: [app, card]
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"
      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

  post:
    tags:
      - Rides
    security:
      - bearerAuth: []
    description: create ride.
    requestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Ride"
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"

      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
/api/v1/rides/select-driver/{id}:
  post:
    tags:
      - Rides
    security:
      - bearerAuth: []
    description: select driver.
    parameters:
      - in: query
        name: id
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              driverId:
              type: string
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"
      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/drivers/rides/response/{id}:
  post:
    tags:
      - Rides
    security:
      - bearerAuth: []
    description: Driver response.
    parameters:
      - in: query
        name: id
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
              type: boolean
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"
      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/rides/status/{id}:
  put:
    tags:
      - Rides
    security:
      - bearerAuth: []
    description: chnage ride status.
    parameters:
      - in: query
        name: id
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"
      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/rides/amount/{id}:
  post:
    tags:
      - Rides
    security:
      - bearerAuth: []
    description: Driver update ride price.
    parameters:
      - in: query
        name: id
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              amount:
              type: number
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"
      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/rides/customer:
  get:
    tags:
      - Rides
    security:
      - bearerAuth: []
    description: gest all customer rides.
    parameters:
      - in: query
        name: page
        schema:
          type: number
          default: 1
      - in: query
        name: limit
        schema:
          type: number
          default: 100
      - in: query
        name: startDate
        schema:
          type: string
      - in: query
        name: endDate
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
            [
              Demande,
              Valider,
              Rejeter,
              En attente,
              Chauffeur au lieu de depart,
              En cours,
              Arriver,
              Términer,
            ]
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"
      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"

/api/v1/rides/forcard:
  post:
    tags:
      - Rides
    security:
      - bearerAuth: []
    description: Driver generate ride for carte payment.
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              amount:
              type: number
    responses:
      200:
        description: ok
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/great_response"
      422 | 404:
        description: En cas d'echec
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/error_response"
